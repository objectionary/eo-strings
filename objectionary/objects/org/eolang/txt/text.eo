# The MIT License (MIT)
#
#  2016-2022 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.collections.list
+alias org.eolang.txt.sscanf
+architect yegor256@gmail.com
+home https://github.com/objectionary/eo-strings
+package org.eolang.txt
+rt jvm org.eolang:eo-strings:0.0.4
+version 0.0.4

# @todo #22:30min Current version use incorrect names for methods.
#  We should rename all methods names in text object via documentation.
#  If you want to know more details read it
#  https://github.com/objectionary/on-the-origin-of-objects/issues/15
[s] > text

  s > @

  # Trim it from both sides
  [] > trim /string

  # Joins an array of strings, using current string
  # as a delimiter
  [items] > joined
    reducedi. > res!
      list
        items
      ("".as-bytes)
      [acc i x]
        if. > @
          i.eq ((items.length).minus 1)
          (acc.concat (x.as-bytes))
          ((acc.concat (x.as-bytes)).concat (s.as-bytes))
    res.as-string > @

  # Checks that string contains substr
  [substr] > contains /bool

  # Checks that string ends with substr
  [substr] > ends-with /bool

  # Checks that string starts with substr
  [substr] > starts-with /bool

  # Returns index of substr in string,
  # if no element was found, it returns -1
  # @todo #43:30min Current implementation using Java.
  #  We should implement finding of first position of substrings
  #  only via EOLANG code. We can do it by using reduce method.
  [substr] > index-of /int

  # Returns last index of substr in string,
  # if no element was found, it returns -1
  # @todo #43:30min Current implementation using Java.
  #  We should implement finding of last position of substrings
  #  only via EOLANG code. We can do it by using reduce method.
  [substr] > last-index-of /int

  # Returns string in lower case
  [] > lower-case /string

  # Returns string in upper case
  [] > upper-case /string

  [i] > at
    ^.s.slice i 1 > @

  # Returns string where all substrings
  # target changed to replacement
  [target replacement] > replaced /string

  # Returns the text as integer
  [] > as-int
    at. > @
      sscanf
        "%d"
        s
      0

  # Returns the text as float
  [] > as-float
    at. > @
      sscanf
        "%f"
        s
      0

  # Compares two strings in lexicographic order.
  # Returns 0 if two strings are equal,
  # a negative number if the first string comes before the argument,
  # a positive number if the first string comes after the argument
  [other] > compare /int

  # Returns an array of strings, separated by a given string
  # @todo #22:30min Current implementation using Java.
  #  We should implement splitting string to array of strings
  #  only via EOLANG code. We can do it by using reduce method.
  [delimiter] > split /array

  # Check that all signs in string are letters
  # @todo #19:30min Current implementation using Java.
  #  We should implement checking that string is alphabetic
  #  only via EOLANG code. We can do it by using reduce method.
  [] > is-alphabetic /bool

  # Returns concatenaion of two strings
  [other] > chained
    as-string. > @
      concat.
        as-bytes.
          s
        as-bytes.
          other
